import tkinter as tk
from PIL import Image, ImageTk

class HealthSmartwatchGUI(tk.Tk):
    def __init__(self):
        super().__init__()

        self.title("Health Smartwatch")
        self.geometry("300x300")

        # Create the canvas with a dark background
        self.canvas = tk.Canvas(self, bg="#1c1c1c", height=600, width=600)
        self.canvas.pack()

        # Create a rounded-corner rectangle as the base shape
        self.create_rounded_rect(10, 10, 600, 600, radius=20, fill="#1c1c1c", outline="white", width=3)

        # Load and resize icons
        sleep_image = Image.open("/Users/franklei/Desktop/Screen Shot 2023-04-21 at 10.01.37 AM.png")
        sleep_image = sleep_image.resize((50, 50), Image.ANTIALIAS)
        self.sleep_icon = ImageTk.PhotoImage(sleep_image)

        heart_rate_image = Image.open("/Users/franklei/Documents/Screen Shot 2023-04-21 at 10.00.52 AM.png")
        heart_rate_image = heart_rate_image.resize((50, 50), Image.ANTIALIAS)
        self.heart_rate_icon = ImageTk.PhotoImage(heart_rate_image)

        step_number_image = Image.open("/Users/franklei/Desktop/Screen Shot 2023-04-21 at 10.01.44 AM.png")
        step_number_image = step_number_image.resize((50, 50), Image.ANTIALIAS)
        self.step_number_icon = ImageTk.PhotoImage(step_number_image)


        # Create icon labels
        self.sleep_icon_label = tk.Label(self, image=self.sleep_icon, bg="#1c1c1c")
        self.sleep_icon_label.place(relx=0.5, rely=0.15, anchor=tk.CENTER)

        self.heart_rate_icon_label = tk.Label(self, image=self.heart_rate_icon, bg="#1c1c1c")
        self.heart_rate_icon_label.place(relx=0.2, rely=0.45, anchor=tk.CENTER)

        self.step_number_icon_label = tk.Label(self, image=self.step_number_icon, bg="#1c1c1c")
        self.step_number_icon_label.place(relx=0.8, rely=0.45, anchor=tk.CENTER)

        # Create buttons and input windows with white text on a dark background
        self.sleep_button = tk.Button(self, text="Rel. sleep", command=self.get_sleep_input, bg="#1c1c1c", fg="black")
        self.sleep_button.place(relx=0.5, rely=0.3, anchor=tk.CENTER)
        self.sleep_entry = tk.Entry(self, bg="#1c1c1c", fg="white", insertbackground="white")
        self.sleep_entry.place(relx=0.5, rely=0.37, anchor=tk.CENTER)
        self.sleep_label = tk.Label(self, text="Hours", bg="#1c1c1c", fg="white")
        self.sleep_label.place(relx=0.5, rely=0.44, anchor=tk.CENTER)

        self.heart_rate_button = tk.Button(self, text="Heart Rate", command=self.get_heart_rate_input, bg="#1c1c1c", fg="black")
        self.heart_rate_button.place(relx=0.2, rely=0.6, anchor=tk.CENTER)
        self.heart_rate_entry = tk.Entry(self, bg="#1c1c1c", fg="white", insertbackground="white")
        self.heart_rate_entry.place(relx=0.2, rely=0.67, anchor=tk.CENTER)
        self.heart_rate_label = tk.Label(self, text="Beats/sec", bg="#1c1c1c", fg="white")
        self.heart_rate_label.place(relx=0.2, rely=0.74, anchor=tk.CENTER)

        self.step_number_button = tk.Button(self, text="Step Numbers", command=self.get_step_number_input, bg="#1c1c1c", fg="black")
        self.step_number_button.place(relx=0.8, rely=0.6, anchor=tk.CENTER)
        self.step_number_entry = tk.Entry(self, bg="#1c1c1c", fg="white", insertbackground="white")
        self.step_number_entry.place(relx=0.8, rely=0.67, anchor=tk.CENTER)
        self.step_number_label = tk.Label(self, text="Steps", bg="#1c1c1c", fg="white")
        self.step_number_label.place(relx=0.8, rely=0.74, anchor=tk.CENTER)

        self.diagnose_button = tk.Button(self, text="Diagnose", command=self.diagnose, bg="#1c1c1c", fg="black", width=15, height=2)
        self.diagnose_button.place(relx=0.5, rely=0.85, anchor=tk.CENTER)

    def create_rounded_rect(self, x1, y1, x2, y2, radius, **kwargs):
        points = [x1+radius, y1,
                  x1+radius, y1,
                  x2-radius, y1,
                  x2-radius, y1,
                  x2, y1,
                  x2, y1+radius,
                  x2, y1+radius,
                  x2, y2-radius,
                  x2, y2-radius,
                  x2, y2,
                  x2-radius, y2,
                  x2-radius, y2,
                  x1+radius, y2,
                  x1+radius, y2,
                  x1, y2,
                  x1, y2-radius,
                  x1, y2-radius,
                  x1, y1+radius,
                  x1, y1+radius,
                  x1, y1]

        return self.canvas.create_polygon(points, **kwargs, smooth=True)

    def get_sleep_input(self):
        sleep_value = self.sleep_entry.get()
        # Process the sleep value as needed

    def get_heart_rate_input(self):
        heart_rate_value = self.heart_rate_entry.get()
        # Process the heart rate value as needed

    def get_step_number_input(self):
        step_number_value = self.step_number_entry.get()
        # Process the step number value as needed

    def diagnose(self):
        # Diagnose based on inputs from the three buttons
        diagnosis_result = "The patient is likely COVID negative"
        DiagnosisWindow(self, diagnosis_result)

class DiagnosisWindow(tk.Toplevel):
    def __init__(self, parent, diagnosis_result):
        super().__init__(parent)

        self.title("Diagnosis Result")
        self.geometry("400x200")
        self.config(bg="#1c1c1c")

        # Create label with diagnosis result
        self.diagnosis_label = tk.Label(self, text=diagnosis_result, wraplength=350, bg="#1c1c1c", fg="white", font=("Helvetica", 16))
        self.diagnosis_label.pack(pady=20)

        # Create "back" button
        self.back_button = tk.Button(self, text="Back", command=self.destroy, bg="#1c1c1c", fg="black", font=("Helvetica", 12))
        self.back_button.pack(pady=10)

if __name__ == "__main__":
    app = HealthSmartwatchGUI()
    app.mainloop()
